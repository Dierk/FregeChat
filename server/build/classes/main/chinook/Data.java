/*
  Source code is in UTF-8 encoding. The following symbols may appear, among others:
  α β γ δ ε ζ η θ ι κ λ μ ν ξ ο π ρ ς σ τ υ φ χ ψ ω « • ¦ »  ﬁ ﬂ ƒ
  If you can't read this, you're out of luck.
  This code was generated with the frege compiler version 3.23.288-gaa3af0c from
  /projects/git/FregeChat/server/src/main/frege/chinook/Data.fr Do not edit this file!
  Instead, edit the source file and recompile.
*/


package chinook;

import frege.Prelude;
import frege.control.Category;
import frege.control.Semigroupoid;
import frege.data.Bits;
import frege.data.JSON;
import frege.data.List;
import frege.data.MicroParsec;
import frege.data.Monoid;
import frege.java.IO;
import frege.java.Lang;
import frege.java.Util;
import frege.java.util.Regex;
import frege.lib.PP;
import frege.prelude.Maybe;
import frege.prelude.PreludeArrays;
import frege.prelude.PreludeBase;
import frege.prelude.PreludeIO;
import frege.prelude.PreludeList;
import frege.prelude.PreludeMonad;
import frege.prelude.PreludeText;

@SuppressWarnings("unused")
@frege.runtime.Meta.FregePackage(
  source="/projects/git/FregeChat/server/src/main/frege/chinook/Data.fr", time=1473669101827L,
  ops={},
  imps={
    "frege.data.JSON", "frege.data.List", "frege.Prelude", "frege.prelude.PreludeArrays",
    "frege.prelude.PreludeBase", "frege.prelude.PreludeIO", "frege.prelude.PreludeList",
    "frege.prelude.PreludeMonad", "frege.prelude.PreludeText", "frege.java.util.Regex"
  },
  nmss={
    "JSON", "List", "Prelude", "PreludeArrays", "PreludeBase", "PreludeIO", "PreludeList",
    "PreludeMonad", "PreludeText", "Regexp"
  },
  symas={}, symcs={},
  symis={
    @frege.runtime.Meta.SymI(
      offset=151,
      name=@frege.runtime.Meta.QName(kind=0, pack="chinook.Data", base="ToJSON_Lang"),
      clas=@frege.runtime.Meta.QName(kind=0, pack="frege.data.JSON", base="ToJSON"), typ=0,
      lnks={},
      funs={
        @frege.runtime.Meta.SymV(
          offset=180,
          name=@frege.runtime.Meta.QName(
            kind=2, pack="chinook.Data", base="ToJSON_Lang", member="toJSON"
          ),
          stri="s(s(uu))", sig=1, depth=1, rkind=49
        )
      }
    ),
    @frege.runtime.Meta.SymI(
      offset=133, name=@frege.runtime.Meta.QName(kind=0, pack="chinook.Data", base="Show_Lang"),
      clas=@frege.runtime.Meta.QName(kind=0, pack="frege.prelude.PreludeText", base="Show"),
      typ=0, lnks={},
      funs={
        @frege.runtime.Meta.SymV(
          offset=133,
          name=@frege.runtime.Meta.QName(
            kind=2, pack="chinook.Data", base="Show_Lang", member="showsub"
          ),
          stri="s(s)", sig=2, depth=1, rkind=49, doc="Function generated for derived instance."
        ),
        @frege.runtime.Meta.SymV(
          offset=133,
          name=@frege.runtime.Meta.QName(
            kind=2, pack="chinook.Data", base="Show_Lang", member="showList"
          ),
          stri="s(ss)", sig=5, depth=2, rkind=49, doc="inherited from 'Show.showList'"
        ),
        @frege.runtime.Meta.SymV(
          offset=133,
          name=@frege.runtime.Meta.QName(
            kind=2, pack="chinook.Data", base="Show_Lang", member="showsPrec"
          ),
          stri="s(uss)", sig=7, depth=3, rkind=49, doc="inherited from 'Show.showsPrec'"
        ),
        @frege.runtime.Meta.SymV(
          offset=133,
          name=@frege.runtime.Meta.QName(
            kind=2, pack="chinook.Data", base="Show_Lang", member="display"
          ),
          stri="s(s)", sig=2, depth=1, rkind=49, doc="inherited from 'Show.display'"
        ),
        @frege.runtime.Meta.SymV(
          offset=133,
          name=@frege.runtime.Meta.QName(
            kind=2, pack="chinook.Data", base="Show_Lang", member="show"
          ),
          stri="s(s)", sig=2, depth=1, rkind=49, doc="Function generated for derived instance."
        ),
        @frege.runtime.Meta.SymV(
          offset=133,
          name=@frege.runtime.Meta.QName(
            kind=2, pack="chinook.Data", base="Show_Lang", member="showChars"
          ),
          stri="s(s)", sig=8, depth=1, rkind=49, doc="inherited from 'Show.showChars'"
        )
      }
    ),
    @frege.runtime.Meta.SymI(
      offset=276,
      name=@frege.runtime.Meta.QName(kind=0, pack="chinook.Data", base="FromJSON_Lang"),
      clas=@frege.runtime.Meta.QName(kind=0, pack="frege.data.JSON", base="FromJSON"), typ=0,
      lnks={},
      funs={
        @frege.runtime.Meta.SymV(
          offset=276,
          name=@frege.runtime.Meta.QName(
            kind=2, pack="chinook.Data", base="FromJSON_Lang", member="parseJSON"
          ),
          stri="s(u)", sig=9, depth=1, rkind=49, doc="inherited from 'FromJSON.parseJSON'"
        ),
        @frege.runtime.Meta.SymV(
          offset=307,
          name=@frege.runtime.Meta.QName(
            kind=2, pack="chinook.Data", base="FromJSON_Lang", member="fromJSON"
          ),
          stri="s(s)", sig=11, depth=1, rkind=52
        )
      }
    )
  },
  symts={
    @frege.runtime.Meta.SymT(
      offset=66, name=@frege.runtime.Meta.QName(kind=0, pack="chinook.Data", base="Lang"),
      typ=0, kind=0,
      cons={
        @frege.runtime.Meta.SymD(
          offset=73,
          name=@frege.runtime.Meta.QName(
            kind=2, pack="chinook.Data", base="Lang", member="Lang"
          ),
          cid=0, typ=12,
          fields={
            @frege.runtime.Meta.Field(name="code", offset=80, sigma=4, strict=false),
            @frege.runtime.Meta.Field(name="desc", offset=115, sigma=4, strict=false)
          }
        )
      },
      lnks={
        @frege.runtime.Meta.SymL(
          offset=180,
          name=@frege.runtime.Meta.QName(
            kind=2, pack="chinook.Data", base="Lang", member="toJSON"
          ),
          alias=@frege.runtime.Meta.QName(
            kind=2, pack="chinook.Data", base="ToJSON_Lang", member="toJSON"
          )
        ),
        @frege.runtime.Meta.SymL(
          offset=133,
          name=@frege.runtime.Meta.QName(
            kind=2, pack="chinook.Data", base="Lang", member="showList"
          ),
          alias=@frege.runtime.Meta.QName(
            kind=2, pack="chinook.Data", base="Show_Lang", member="showList"
          )
        ),
        @frege.runtime.Meta.SymL(
          offset=133,
          name=@frege.runtime.Meta.QName(
            kind=2, pack="chinook.Data", base="Lang", member="showsPrec"
          ),
          alias=@frege.runtime.Meta.QName(
            kind=2, pack="chinook.Data", base="Show_Lang", member="showsPrec"
          )
        ),
        @frege.runtime.Meta.SymL(
          offset=276,
          name=@frege.runtime.Meta.QName(
            kind=2, pack="chinook.Data", base="Lang", member="parseJSON"
          ),
          alias=@frege.runtime.Meta.QName(
            kind=2, pack="chinook.Data", base="FromJSON_Lang", member="parseJSON"
          )
        ),
        @frege.runtime.Meta.SymL(
          offset=133,
          name=@frege.runtime.Meta.QName(
            kind=2, pack="chinook.Data", base="Lang", member="show"
          ),
          alias=@frege.runtime.Meta.QName(
            kind=2, pack="chinook.Data", base="Show_Lang", member="show"
          )
        ),
        @frege.runtime.Meta.SymL(
          offset=133,
          name=@frege.runtime.Meta.QName(
            kind=2, pack="chinook.Data", base="Lang", member="showChars"
          ),
          alias=@frege.runtime.Meta.QName(
            kind=2, pack="chinook.Data", base="Show_Lang", member="showChars"
          )
        ),
        @frege.runtime.Meta.SymL(
          offset=133,
          name=@frege.runtime.Meta.QName(
            kind=2, pack="chinook.Data", base="Lang", member="showsub"
          ),
          alias=@frege.runtime.Meta.QName(
            kind=2, pack="chinook.Data", base="Show_Lang", member="showsub"
          )
        ),
        @frege.runtime.Meta.SymL(
          offset=133,
          name=@frege.runtime.Meta.QName(
            kind=2, pack="chinook.Data", base="Lang", member="display"
          ),
          alias=@frege.runtime.Meta.QName(
            kind=2, pack="chinook.Data", base="Show_Lang", member="display"
          )
        ),
        @frege.runtime.Meta.SymL(
          offset=307,
          name=@frege.runtime.Meta.QName(
            kind=2, pack="chinook.Data", base="Lang", member="fromJSON"
          ),
          alias=@frege.runtime.Meta.QName(
            kind=2, pack="chinook.Data", base="FromJSON_Lang", member="fromJSON"
          )
        )
      },
      funs={
        @frege.runtime.Meta.SymV(
          offset=116,
          name=@frege.runtime.Meta.QName(
            kind=2, pack="chinook.Data", base="Lang", member="upd$desc"
          ),
          stri="s(su)", sig=13, depth=2, rkind=49, doc="update field @desc@"
        ),
        @frege.runtime.Meta.SymV(
          offset=81,
          name=@frege.runtime.Meta.QName(
            kind=2, pack="chinook.Data", base="Lang", member="upd$code"
          ),
          stri="s(su)", sig=13, depth=2, rkind=49, doc="update field @code@"
        ),
        @frege.runtime.Meta.SymV(
          offset=81,
          name=@frege.runtime.Meta.QName(
            kind=2, pack="chinook.Data", base="Lang", member="has$code"
          ),
          stri="s(u)", sig=15, depth=1, rkind=49, doc="check if constructor has field @code@"
        ),
        @frege.runtime.Meta.SymV(
          offset=116,
          name=@frege.runtime.Meta.QName(
            kind=2, pack="chinook.Data", base="Lang", member="desc"
          ),
          stri="s(s)", sig=2, depth=1, rkind=49, doc="access field @desc@"
        ),
        @frege.runtime.Meta.SymV(
          offset=116,
          name=@frege.runtime.Meta.QName(
            kind=2, pack="chinook.Data", base="Lang", member="chg$desc"
          ),
          stri="s(su)", sig=17, depth=2, rkind=49, doc="change field @desc@"
        ),
        @frege.runtime.Meta.SymV(
          offset=81,
          name=@frege.runtime.Meta.QName(
            kind=2, pack="chinook.Data", base="Lang", member="chg$code"
          ),
          stri="s(su)", sig=17, depth=2, rkind=49, doc="change field @code@"
        ),
        @frege.runtime.Meta.SymV(
          offset=81,
          name=@frege.runtime.Meta.QName(
            kind=2, pack="chinook.Data", base="Lang", member="code"
          ),
          stri="s(s)", sig=2, depth=1, rkind=49, doc="access field @code@"
        ),
        @frege.runtime.Meta.SymV(
          offset=116,
          name=@frege.runtime.Meta.QName(
            kind=2, pack="chinook.Data", base="Lang", member="has$desc"
          ),
          stri="s(u)", sig=15, depth=1, rkind=49, doc="check if constructor has field @desc@"
        )
      },
      prod=true
    )
  },
  symvs={},
  symls={
    @frege.runtime.Meta.SymL(
      offset=73, name=@frege.runtime.Meta.QName(pack="chinook.Data", base="Lang"),
      alias=@frege.runtime.Meta.QName(kind=2, pack="chinook.Data", base="Lang", member="Lang")
    )
  },
  taus={
    @frege.runtime.Meta.Tau(
      kind=2, suba=0, tcon={@frege.runtime.Meta.QName(kind=0, pack="chinook.Data", base="Lang")}
    ),
    @frege.runtime.Meta.Tau(
      kind=2, suba=0,
      tcon={@frege.runtime.Meta.QName(kind=0, pack="frege.data.JSON", base="Value")}
    ),
    @frege.runtime.Meta.Tau(
      kind=2, suba=0,
      tcon={@frege.runtime.Meta.QName(kind=0, pack="frege.prelude.PreludeBase", base="StringJ")}
    ),
    @frege.runtime.Meta.Tau(
      kind=2, suba=0,
      tcon={@frege.runtime.Meta.QName(kind=0, pack="frege.prelude.PreludeBase", base="Char")}
    ),
    @frege.runtime.Meta.Tau(kind=0, suba=2, subb=3),
    @frege.runtime.Meta.Tau(
      kind=2, suba=0,
      tcon={@frege.runtime.Meta.QName(kind=0, pack="frege.prelude.PreludeBase", base="[]")}
    ),
    @frege.runtime.Meta.Tau(kind=0, suba=5, subb=0),
    @frege.runtime.Meta.Tau(
      kind=2, suba=0,
      tcon={@frege.runtime.Meta.QName(kind=0, pack="frege.prelude.PreludeBase", base="Int")}
    ),
    @frege.runtime.Meta.Tau(kind=0, suba=5, subb=3), @frege.runtime.Meta.Tau(suba=1, tvar="α"),
    @frege.runtime.Meta.Tau(kind=0, suba=9, subb=0), @frege.runtime.Meta.Tau(suba=0, tvar="α"),
    @frege.runtime.Meta.Tau(
      kind=2, suba=0,
      tcon={@frege.runtime.Meta.QName(kind=0, pack="frege.prelude.PreludeBase", base="Bool")}
    ),
    @frege.runtime.Meta.Tau(
      kind=2, suba=0,
      tcon={@frege.runtime.Meta.QName(kind=0, pack="frege.prelude.PreludeBase", base="->")}
    ),
    @frege.runtime.Meta.Tau(kind=0, suba=13, subb=4),
    @frege.runtime.Meta.Tau(kind=0, suba=14, subb=4)
  },
  rhos={
    @frege.runtime.Meta.Rho(rhofun=false, rhotau=0),
    @frege.runtime.Meta.Rho(rhofun=false, rhotau=1), @frege.runtime.Meta.Rho(sigma=0, rhotau=1),
    @frege.runtime.Meta.Rho(rhofun=false, rhotau=4), @frege.runtime.Meta.Rho(sigma=0, rhotau=3),
    @frege.runtime.Meta.Rho(rhofun=false, rhotau=6), @frege.runtime.Meta.Rho(sigma=4, rhotau=3),
    @frege.runtime.Meta.Rho(sigma=3, rhotau=6), @frege.runtime.Meta.Rho(rhofun=false, rhotau=7),
    @frege.runtime.Meta.Rho(sigma=0, rhotau=6), @frege.runtime.Meta.Rho(sigma=6, rhotau=9),
    @frege.runtime.Meta.Rho(rhofun=false, rhotau=8),
    @frege.runtime.Meta.Rho(sigma=0, rhotau=11),
    @frege.runtime.Meta.Rho(rhofun=false, rhotau=10),
    @frege.runtime.Meta.Rho(
      cont={
        @frege.runtime.Meta.Context(
          clas=@frege.runtime.Meta.QName(
            kind=0, pack="frege.prelude.PreludeMonad", base="MonadFail"
          ),
          tau=9
        )
      },
      sigma=4, rhotau=13
    ),
    @frege.runtime.Meta.Rho(
      cont={
        @frege.runtime.Meta.Context(
          clas=@frege.runtime.Meta.QName(
            kind=0, pack="frege.prelude.PreludeMonad", base="MonadFail"
          ),
          tau=9
        )
      },
      sigma=10, rhotau=13
    ),
    @frege.runtime.Meta.Rho(sigma=4, rhotau=0), @frege.runtime.Meta.Rho(sigma=4, rhotau=16),
    @frege.runtime.Meta.Rho(sigma=0, rhotau=16),
    @frege.runtime.Meta.Rho(rhofun=false, rhotau=11),
    @frege.runtime.Meta.Rho(rhofun=false, rhotau=12),
    @frege.runtime.Meta.Rho(sigma=14, rhotau=20),
    @frege.runtime.Meta.Rho(rhofun=false, rhotau=15),
    @frege.runtime.Meta.Rho(sigma=16, rhotau=0), @frege.runtime.Meta.Rho(sigma=0, rhotau=23)
  },
  sigmas={
    @frege.runtime.Meta.Sigma(rho=0), @frege.runtime.Meta.Sigma(rho=2),
    @frege.runtime.Meta.Sigma(rho=4), @frege.runtime.Meta.Sigma(rho=5),
    @frege.runtime.Meta.Sigma(rho=3), @frege.runtime.Meta.Sigma(rho=7),
    @frege.runtime.Meta.Sigma(rho=8), @frege.runtime.Meta.Sigma(rho=10),
    @frege.runtime.Meta.Sigma(rho=12),
    @frege.runtime.Meta.Sigma(bound={"α"}, kinds={1}, rho=14), @frege.runtime.Meta.Sigma(rho=1),
    @frege.runtime.Meta.Sigma(bound={"α"}, kinds={1}, rho=15),
    @frege.runtime.Meta.Sigma(rho=17), @frege.runtime.Meta.Sigma(rho=18),
    @frege.runtime.Meta.Sigma(rho=19),
    @frege.runtime.Meta.Sigma(bound={"α"}, kinds={0}, rho=21),
    @frege.runtime.Meta.Sigma(rho=22), @frege.runtime.Meta.Sigma(rho=24)
  },
  exprs={@frege.runtime.Meta.Expr()},
  kinds={@frege.runtime.Meta.Kind(kind=0), @frege.runtime.Meta.Kind(kind=3, suba=0, subb=0)}
)

final public class Data  {
  

final public static Ĳ ĳ = new Ĳ();
final public static class TLang extends frege.runtime.Algebraic  {
  private TLang(final java.lang.Object arg$1, final java.lang.Object arg$2) {
    mem$code = arg$1;
    mem$desc = arg$2;
  }
  final public int _constructor() {
    return 0;
  }
  final public static TLang mk(final java.lang.Object arg$1, final java.lang.Object arg$2) {
    return new TLang(arg$1, arg$2);
  }
  final public java.lang.Object mem$code ;
  final public java.lang.Object mem$desc ;
  final public static TLang chg$code(final TLang arg$1, final frege.runtime.Lazy arg$2) {
    return TLang.mk(
              arg$2.<frege.runtime.Lambda>forced().apply(arg$1.mem$code).result(),
              arg$1.mem$desc
            );
  }
  final public static TLang chg$desc(final TLang arg$1, final frege.runtime.Lazy arg$2) {
    return TLang.mk(
              arg$1.mem$code,
              arg$2.<frege.runtime.Lambda>forced().apply(arg$1.mem$desc).result()
            );
  }
  final public static java.lang.String code(final TLang arg$1) {
    final java.lang.String a1_18494 = 
      frege.runtime.Delayed.<java.lang.String>forced(arg$1.mem$code)
    ;
    return a1_18494;
  }
  final public static java.lang.String desc(final TLang arg$1) {
    final java.lang.String a2_18465 = 
      frege.runtime.Delayed.<java.lang.String>forced(arg$1.mem$desc)
    ;
    return a2_18465;
  }
  final public static boolean has$code(final java.lang.Object arg$1) {
    return true;
  }
  final public static boolean has$desc(final java.lang.Object arg$1) {
    return true;
  }
  final public static TLang upd$code(final TLang arg$1, final java.lang.Object arg$2) {
    return TLang.mk(arg$2, arg$1.mem$desc);
  }
  final public static TLang upd$desc(final TLang arg$1, final java.lang.Object arg$2) {
    return TLang.mk(arg$1.mem$code, arg$2);
  }
}
final public static class IFromJSON_Lang implements JSON.CFromJSON {
  public IFromJSON_Lang() {}
  final public static IFromJSON_Lang it = new IFromJSON_Lang();
  final public frege.runtime.Fun1<java.lang.Object> ƒparseJSON(
    final PreludeMonad.CMonadFail ctx$1
  ) {
    final frege.runtime.Fun1<java.lang.Object> cheet = Ĳ.parseJSONƒc56afc39.inst(ctx$1);
    return cheet.<java.lang.Object, java.lang.Object>toSuper(cheet);
  }
  final public frege.runtime.Fun1<java.lang.Object> ƒfromJSON(
    final PreludeMonad.CMonadFail ctx$1
  ) {
    return Ĳ.fromJSONƒe87da5b0.inst(ctx$1);
  }
  final public static java.lang.Object fromJSON(
    final PreludeMonad.CMonadFail ctx$1, final JSON.TValue arg$1
  ) {
    final JSON.TValue.DStruct $19248 = arg$1._Struct();
    if ($19248 != null) {
      return ctx$1.ƒ_gt_gt_eq().apply(
                Ĳ.fieldƒd1a50485.inst(JSON.IFromJSON_String.it, ctx$1).apply(
                      "code", $19248.mem1
                    ),
                new frege.runtime.Fun1<java.lang.Object>() {
                  final public java.lang.Object eval(final java.lang.Object arg$2) {
                    return ctx$1.ƒ_gt_gt_eq().apply(
                              Ĳ.fieldƒd1a50485.inst(JSON.IFromJSON_String.it, ctx$1).apply(
                                    "desc", $19248.mem1
                                  ),
                              new frege.runtime.Fun1<java.lang.Object>() {
                                final public java.lang.Object eval(
                                  final java.lang.Object arg$3
                                ) {
                                  return ctx$1.ƒ_return().apply(TLang.mk(arg$2, arg$3));
                                }
                              }
                            );
                  }
                }
              );
    }
    return ctx$1.ƒfail().apply(
              new frege.runtime.Delayed() {
                final public java.lang.Object eval() {
                  return PreludeBase.TStringJ._plus_plus(
                            "expected {\"code\" : ..., \"desc\" : ...}, found ",
                            JSON.IShow_Value.show(arg$1)
                          );
                }
              }
            );
  }
  final public static java.lang.Object parseJSON(
    final PreludeMonad.CMonadFail ctx$1, final java.lang.Object arg$1
  ) {
    return frege.runtime.Delayed.<java.lang.Object>forced(
              PreludeBase.either(
                    ctx$1.ƒfail(), Ĳ.fromJSONƒe87da5b0.inst(ctx$1),
                    JSON.runParser(JSON.parseObject, JSON.Ĳ.lexerƒd1f80697.inst.apply(arg$1))
                  )
            );
  }
}
final public static class IShow_Lang implements PreludeText.CShow {
  public IShow_Lang() {}
  final public static IShow_Lang it = new IShow_Lang();
  final public frege.runtime.Fun1<java.lang.Object> ƒshowsub() {
    final frege.runtime.Fun1<java.lang.String> cheet = Ĳ.showsubƒ2ebd8b6c.inst;
    return cheet.<java.lang.Object, java.lang.String>toSuper(cheet);
  }
  final public frege.runtime.Fun2<java.lang.Object> ƒshowList() {
    final frege.runtime.Fun2<java.lang.String> cheet = Ĳ.showListƒ9f4f1e84.inst;
    return cheet.<java.lang.Object, java.lang.String>toSuper(cheet);
  }
  final public frege.runtime.Fun3<java.lang.Object> ƒshowsPrec() {
    final frege.runtime.Fun3<java.lang.String> cheet = Ĳ.showsPrecƒ431c059f.inst;
    return cheet.<java.lang.Object, java.lang.String>toSuper(cheet);
  }
  final public frege.runtime.Fun1<java.lang.Object> ƒdisplay() {
    final frege.runtime.Fun1<java.lang.String> cheet = Ĳ.displayƒ1729fe0b.inst;
    return cheet.<java.lang.Object, java.lang.String>toSuper(cheet);
  }
  final public frege.runtime.Fun1<java.lang.Object> ƒshow() {
    final frege.runtime.Fun1<java.lang.String> cheet = Ĳ.showƒb3bac046.inst;
    return cheet.<java.lang.Object, java.lang.String>toSuper(cheet);
  }
  final public frege.runtime.Fun1<frege.runtime.Lazy> ƒshowChars() {
    final frege.runtime.Fun1<PreludeBase.TList> cheet = Ĳ.showCharsƒ40824829.inst;
    return cheet.<frege.runtime.Lazy, PreludeBase.TList>toSuper(cheet);
  }
  final public static java.lang.String display(final TLang arg$1) {
    return IShow_Lang.show(arg$1);
  }
  final public static java.lang.String show(final TLang arg$1) {
    final java.lang.String a2_18645 = 
      frege.runtime.Delayed.<java.lang.String>forced(arg$1.mem$desc)
    ;
    final java.lang.String a1_18646 = 
      frege.runtime.Delayed.<java.lang.String>forced(arg$1.mem$code)
    ;
    return PreludeBase.TStringJ._plus_plus(
              PreludeBase.TStringJ._plus_plus(
                    PreludeBase.TStringJ._plus_plus(
                          PreludeBase.TStringJ._plus_plus("Lang", " "),
                          PreludeText.IShow_String.showsub(a1_18646)
                        ),
                    " "
                  ),
              PreludeText.IShow_String.showsub(a2_18645)
            );
  }
  final public static PreludeBase.TList showChars(final TLang arg$1) {
    return PreludeList.IListView_StringJ.toList(IShow_Lang.show(arg$1));
  }
  final public static java.lang.String showList(
    final PreludeBase.TList arg$1, final java.lang.String arg$2
  ) {
    return PreludeBase.TStringJ._plus_plus(
              "[",
              PreludeBase.TStringJ._plus_plus(
                    PreludeText.joined(", ", PreludeList.map(Ĳ.showƒb3bac046.inst, arg$1)),
                    PreludeBase.TStringJ._plus_plus("]", arg$2)
                  )
            );
  }
  final public static java.lang.String showsPrec(
    final java.lang.Object arg$1, final TLang arg$2, final java.lang.String arg$3
  ) {
    return PreludeBase.TStringJ._plus_plus(IShow_Lang.show(arg$2), arg$3);
  }
  final public static java.lang.String showsub(final TLang arg$1) {
    final java.lang.String a2_18642 = 
      frege.runtime.Delayed.<java.lang.String>forced(arg$1.mem$desc)
    ;
    final java.lang.String a1_18647 = 
      frege.runtime.Delayed.<java.lang.String>forced(arg$1.mem$code)
    ;
    return PreludeBase.TStringJ._plus_plus(
              PreludeBase.TStringJ._plus_plus(
                    "(",
                    PreludeBase.TStringJ._plus_plus(
                          PreludeBase.TStringJ._plus_plus(
                                PreludeBase.TStringJ._plus_plus(
                                      PreludeBase.TStringJ._plus_plus("Lang", " "),
                                      PreludeText.IShow_String.showsub(a1_18647)
                                    ),
                                " "
                              ),
                          PreludeText.IShow_String.showsub(a2_18642)
                        )
                  ),
              ")"
            );
  }
}
final public static class IToJSON_Lang implements JSON.CToJSON {
  public IToJSON_Lang() {}
  final public static IToJSON_Lang it = new IToJSON_Lang();
  final public frege.runtime.Fun1<frege.runtime.Lazy> ƒtoJSON() {
    final frege.runtime.Fun1<JSON.TValue> cheet = Ĳ.toJSONƒ5ff2b992.inst;
    return cheet.<frege.runtime.Lazy, JSON.TValue>toSuper(cheet);
  }
  final public static JSON.TValue toJSON(final TLang arg$1) {
    return JSON.TValue.DStruct.mk(
              PreludeBase.TList.DCons.mk(
                    JSON.Ĳ.assocƒd1634fa0.inst(JSON.IToJSON_String.it).apply(
                          "code", arg$1.mem$code
                        ),
                    PreludeBase.TList.DCons.mk(
                          JSON.Ĳ.assocƒd1634fa0.inst(JSON.IToJSON_String.it).apply(
                                "desc", arg$1.mem$desc
                              ),
                          PreludeBase.TList.DList.it
                        )
                  )
            );
  }
}
@frege.runtime.Meta.FunctionPointers(
  qnames={
    @frege.runtime.Meta.QName(kind=2, pack="chinook.Data", base="Show_Lang", member="show"),
    @frege.runtime.Meta.QName(kind=2, pack="chinook.Data", base="Show_Lang", member="showsub"),
    @frege.runtime.Meta.QName(
      kind=2, pack="chinook.Data", base="FromJSON_Lang", member="fromJSON"
    ),
    @frege.runtime.Meta.QName(kind=2, pack="chinook.Data", base="ToJSON_Lang", member="toJSON"),
    @frege.runtime.Meta.QName(
      kind=2, pack="chinook.Data", base="Show_Lang", member="showChars"
    ),
    @frege.runtime.Meta.QName(
      kind=2, pack="chinook.Data", base="Show_Lang", member="showsPrec"
    ),
    @frege.runtime.Meta.QName(kind=2, pack="chinook.Data", base="Show_Lang", member="display"),
    @frege.runtime.Meta.QName(
      kind=2, pack="chinook.Data", base="FromJSON_Lang", member="parseJSON"
    ),
    @frege.runtime.Meta.QName(kind=2, pack="chinook.Data", base="Show_Lang", member="showList"),
    @frege.runtime.Meta.QName(pack="frege.data.JSON", base="field")
  },
  jnames={
    "showƒb3bac046", "showsubƒ2ebd8b6c", "fromJSONƒe87da5b0", "toJSONƒ5ff2b992",
    "showCharsƒ40824829", "showsPrecƒ431c059f", "displayƒ1729fe0b", "parseJSONƒc56afc39",
    "showListƒ9f4f1e84", "fieldƒd1a50485"
  }
)
public static class Ĳ  {
  public Ĳ() {}
  final public static class showƒb3bac046 extends frege.runtime.Fun1<java.lang.String>  {
    public showƒb3bac046() {}
    final public java.lang.String eval(final java.lang.Object arg$1) {
      return IShow_Lang.show(frege.runtime.Delayed.<TLang>forced(arg$1));
    }
    final public static showƒb3bac046 inst = new showƒb3bac046();
  }
  final public static class showsubƒ2ebd8b6c extends frege.runtime.Fun1<java.lang.String>  {
    public showsubƒ2ebd8b6c() {}
    final public java.lang.String eval(final java.lang.Object arg$1) {
      return IShow_Lang.showsub(frege.runtime.Delayed.<TLang>forced(arg$1));
    }
    final public static showsubƒ2ebd8b6c inst = new showsubƒ2ebd8b6c();
  }
  final public static class fromJSONƒe87da5b0 extends frege.runtime.Fun1<java.lang.Object>  {
    final PreludeMonad.CMonadFail ctx$1 ;
    public fromJSONƒe87da5b0(final PreludeMonad.CMonadFail arg$1) {
      ctx$1 = arg$1;
    }
    final public java.lang.Object eval(final java.lang.Object arg$1) {
      return IFromJSON_Lang.fromJSON(ctx$1, frege.runtime.Delayed.<JSON.TValue>forced(arg$1));
    }
    final public static fromJSONƒe87da5b0 inst(final PreludeMonad.CMonadFail arg$1) {
      return new fromJSONƒe87da5b0(arg$1);
    }
  }
  final public static class toJSONƒ5ff2b992 extends frege.runtime.Fun1<JSON.TValue>  {
    public toJSONƒ5ff2b992() {}
    final public JSON.TValue eval(final java.lang.Object arg$1) {
      return IToJSON_Lang.toJSON(frege.runtime.Delayed.<TLang>forced(arg$1));
    }
    final public static toJSONƒ5ff2b992 inst = new toJSONƒ5ff2b992();
  }
  final public static class showCharsƒ40824829 extends frege.runtime.Fun1<PreludeBase.TList>  {
    public showCharsƒ40824829() {}
    final public PreludeBase.TList eval(final java.lang.Object arg$1) {
      return IShow_Lang.showChars(frege.runtime.Delayed.<TLang>forced(arg$1));
    }
    final public static showCharsƒ40824829 inst = new showCharsƒ40824829();
  }
  final public static class showsPrecƒ431c059f extends frege.runtime.Fun3<java.lang.String>  {
    public showsPrecƒ431c059f() {}
    final public java.lang.String eval(
      final java.lang.Object arg$3, final java.lang.Object arg$2, final java.lang.Object arg$1
    ) {
      return IShow_Lang.showsPrec(
                arg$1, frege.runtime.Delayed.<TLang>forced(arg$2),
                frege.runtime.Delayed.<java.lang.String>forced(arg$3)
              );
    }
    final public static showsPrecƒ431c059f inst = new showsPrecƒ431c059f();
  }
  final public static class displayƒ1729fe0b extends frege.runtime.Fun1<java.lang.String>  {
    public displayƒ1729fe0b() {}
    final public java.lang.String eval(final java.lang.Object arg$1) {
      return IShow_Lang.display(frege.runtime.Delayed.<TLang>forced(arg$1));
    }
    final public static displayƒ1729fe0b inst = new displayƒ1729fe0b();
  }
  final public static class parseJSONƒc56afc39 extends frege.runtime.Fun1<java.lang.Object>  {
    final PreludeMonad.CMonadFail ctx$1 ;
    public parseJSONƒc56afc39(final PreludeMonad.CMonadFail arg$1) {
      ctx$1 = arg$1;
    }
    final public java.lang.Object eval(final java.lang.Object arg$1) {
      return IFromJSON_Lang.parseJSON(ctx$1, arg$1);
    }
    final public static parseJSONƒc56afc39 inst(final PreludeMonad.CMonadFail arg$1) {
      return new parseJSONƒc56afc39(arg$1);
    }
  }
  final public static class showListƒ9f4f1e84 extends frege.runtime.Fun2<java.lang.String>  {
    public showListƒ9f4f1e84() {}
    final public java.lang.String eval(
      final java.lang.Object arg$2, final java.lang.Object arg$1
    ) {
      return IShow_Lang.showList(
                frege.runtime.Delayed.<PreludeBase.TList>forced(arg$1),
                frege.runtime.Delayed.<java.lang.String>forced(arg$2)
              );
    }
    final public static showListƒ9f4f1e84 inst = new showListƒ9f4f1e84();
  }
  final public static class fieldƒd1a50485 extends frege.runtime.Fun2<java.lang.Object>  {
    final JSON.CFromJSON ctx$1 ;
    final PreludeMonad.CMonadFail ctx$2 ;
    public fieldƒd1a50485(final JSON.CFromJSON arg$1, final PreludeMonad.CMonadFail arg$2) {
      ctx$1 = arg$1;
      ctx$2 = arg$2;
    }
    final public java.lang.Object eval(
      final java.lang.Object arg$2, final java.lang.Object arg$1
    ) {
      return JSON.field(
                ctx$1, ctx$2, arg$1, frege.runtime.Delayed.<PreludeBase.TList>forced(arg$2)
              );
    }
    final public static fieldƒd1a50485 inst(
      final JSON.CFromJSON arg$1, final PreludeMonad.CMonadFail arg$2
    ) {
      return new fieldƒd1a50485(arg$1, arg$2);
    }
  }
}
}
