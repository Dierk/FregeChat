/*
  Source code is in UTF-8 encoding. The following symbols may appear, among others:
  α β γ δ ε ζ η θ ι κ λ μ ν ξ ο π ρ ς σ τ υ φ χ ψ ω « • ¦ »  ﬁ ﬂ ƒ
  If you can't read this, you're out of luck.
  This code was generated with the frege compiler version 3.23.288-gaa3af0c from
  /projects/git/FregeChat/server/src/main/frege/chinook/Handlers.fr Do not edit this file!
  Instead, edit the source file and recompile.
*/


package chinook;

import chinook.Chinook;
import chinook.Data;
import chinook.Spark;
import chinook.Utils;
import chinook.util.ContentType;
import frege.Prelude;
import frege.control.Category;
import frege.control.Semigroupoid;
import frege.data.Bits;
import frege.data.Iterators;
import frege.data.JSON;
import frege.data.List;
import frege.data.MicroParsec;
import frege.data.Monoid;
import frege.java.IO;
import frege.java.Lang;
import frege.java.Util;
import frege.java.util.Regex;
import frege.lib.PP;
import frege.prelude.Maybe;
import frege.prelude.PreludeArrays;
import frege.prelude.PreludeBase;
import frege.prelude.PreludeIO;
import frege.prelude.PreludeList;
import frege.prelude.PreludeMonad;
import frege.prelude.PreludeText;

@SuppressWarnings("unused")
@frege.runtime.Meta.FregePackage(
  source="/projects/git/FregeChat/server/src/main/frege/chinook/Handlers.fr",
  time=1473678386105L, ops={},
  imps={
    "chinook.Chinook", "chinook.util.ContentType", "chinook.Data", "frege.data.JSON",
    "frege.Prelude", "frege.prelude.PreludeArrays", "frege.prelude.PreludeBase",
    "frege.prelude.PreludeIO", "frege.prelude.PreludeList", "frege.prelude.PreludeMonad",
    "frege.prelude.PreludeText", "frege.java.util.Regex"
  },
  nmss={
    "Chinook", "ContentType", "Data", "JSON", "Prelude", "PreludeArrays", "PreludeBase",
    "PreludeIO", "PreludeList", "PreludeMonad", "PreludeText", "Regexp"
  },
  symas={}, symcs={}, symis={}, symts={},
  symvs={
    @frege.runtime.Meta.SymV(
      offset=2071, name=@frege.runtime.Meta.QName(pack="chinook.Handlers", base="processJSON"),
      stri="s(s)", sig=1, depth=1, rkind=49
    ),
    @frege.runtime.Meta.SymV(
      offset=1674,
      name=@frege.runtime.Meta.QName(pack="chinook.Handlers", base="postJSONHandler"),
      stri="s(s)", sig=3, depth=1, rkind=49
    ),
    @frege.runtime.Meta.SymV(
      offset=236,
      name=@frege.runtime.Meta.QName(pack="chinook.Handlers", base="helloWorldHandler"),
      stri="s(u)", sig=3, depth=1, rkind=49
    ),
    @frege.runtime.Meta.SymV(
      offset=553,
      name=@frege.runtime.Meta.QName(pack="chinook.Handlers", base="greetingsHandler"),
      stri="s(s)", sig=3, depth=1, rkind=49
    ),
    @frege.runtime.Meta.SymV(
      offset=1115,
      name=@frege.runtime.Meta.QName(pack="chinook.Handlers", base="getJSONHandler"),
      stri="s(u)", sig=3, depth=1, rkind=49
    ),
    @frege.runtime.Meta.SymV(
      offset=1459,
      name=@frege.runtime.Meta.QName(pack="chinook.Handlers", base="getLangAsJSON"),
      stri="s(su)", sig=4, depth=2, rkind=49
    ),
    @frege.runtime.Meta.SymV(
      offset=409,
      name=@frege.runtime.Meta.QName(pack="chinook.Handlers", base="goodbyeHandler"),
      stri="s(u)", sig=3, depth=1, rkind=49
    ),
    @frege.runtime.Meta.SymV(
      offset=838,
      name=@frege.runtime.Meta.QName(pack="chinook.Handlers", base="createGreetings"),
      stri="s(uu)", sig=4, depth=2, rkind=49
    )
  },
  symls={},
  taus={
    @frege.runtime.Meta.Tau(
      kind=2, suba=0,
      tcon={@frege.runtime.Meta.QName(kind=0, pack="frege.prelude.PreludeBase", base="Maybe")}
    ),
    @frege.runtime.Meta.Tau(
      kind=2, suba=0,
      tcon={@frege.runtime.Meta.QName(kind=0, pack="frege.prelude.PreludeBase", base="StringJ")}
    ),
    @frege.runtime.Meta.Tau(
      kind=2, suba=0,
      tcon={@frege.runtime.Meta.QName(kind=0, pack="frege.prelude.PreludeBase", base="Char")}
    ),
    @frege.runtime.Meta.Tau(kind=0, suba=1, subb=2),
    @frege.runtime.Meta.Tau(kind=0, suba=0, subb=3),
    @frege.runtime.Meta.Tau(
      kind=2, suba=0, tcon={@frege.runtime.Meta.QName(kind=0, pack="chinook.Data", base="Lang")}
    ),
    @frege.runtime.Meta.Tau(kind=0, suba=0, subb=5),
    @frege.runtime.Meta.Tau(
      kind=2, suba=0,
      tcon={@frege.runtime.Meta.QName(kind=0, pack="frege.prelude.PreludeBase", base="ST")}
    ),
    @frege.runtime.Meta.Tau(
      kind=2, suba=0,
      tcon={
        @frege.runtime.Meta.QName(kind=0, pack="frege.prelude.PreludeBase", base="RealWorld")
      }
    ),
    @frege.runtime.Meta.Tau(kind=0, suba=7, subb=8),
    @frege.runtime.Meta.Tau(
      kind=2, suba=0,
      tcon={@frege.runtime.Meta.QName(kind=0, pack="chinook.Chinook", base="Request")}
    ),
    @frege.runtime.Meta.Tau(kind=0, suba=9, subb=10),
    @frege.runtime.Meta.Tau(
      kind=2, suba=0,
      tcon={@frege.runtime.Meta.QName(kind=0, pack="chinook.Chinook", base="Response")}
    ),
    @frege.runtime.Meta.Tau(kind=0, suba=9, subb=12)
  },
  rhos={
    @frege.runtime.Meta.Rho(rhofun=false, rhotau=4),
    @frege.runtime.Meta.Rho(rhofun=false, rhotau=6), @frege.runtime.Meta.Rho(sigma=0, rhotau=1),
    @frege.runtime.Meta.Rho(rhofun=false, rhotau=11),
    @frege.runtime.Meta.Rho(rhofun=false, rhotau=13),
    @frege.runtime.Meta.Rho(sigma=2, rhotau=4), @frege.runtime.Meta.Rho(sigma=0, rhotau=0),
    @frege.runtime.Meta.Rho(sigma=0, rhotau=6)
  },
  sigmas={
    @frege.runtime.Meta.Sigma(rho=0), @frege.runtime.Meta.Sigma(rho=2),
    @frege.runtime.Meta.Sigma(rho=3), @frege.runtime.Meta.Sigma(rho=5),
    @frege.runtime.Meta.Sigma(rho=7)
  },
  exprs={@frege.runtime.Meta.Expr()}, kinds={@frege.runtime.Meta.Kind(kind=0)}
)

final public class Handlers  {
  

final public static Ĳ ĳ = new Ĳ();
final public static PreludeBase.TMaybe processJSON(final PreludeBase.TMaybe arg$1) {
  final PreludeBase.TMaybe.DJust $19118 = arg$1._Just();
  if ($19118 != null) {
    final PreludeBase.TMaybe $19117 = 
      (PreludeBase.TMaybe)Data.IFromJSON_Lang.parseJSON(Maybe.IMonadFail_Maybe.it, $19118.mem1)
    ;
    final PreludeBase.TMaybe.DJust $19120 = $19117._Just();
    if ($19120 != null) {
      final Data.TLang a_18968 = frege.runtime.Delayed.<Data.TLang>forced($19120.mem1);
      return PreludeBase.TMaybe.DJust.mk(a_18968);
    }
    final PreludeBase.TMaybe.DNothing $19114 = $19117._Nothing();
    assert $19114 != null;
    return PreludeBase.TMaybe.DNothing.it;
  }
  final PreludeBase.TMaybe.DNothing $19113 = arg$1._Nothing();
  assert $19113 != null;
  return PreludeBase.TMaybe.DNothing.it;
}
final public static frege.runtime.Lambda postJSONHandler(final frege.runtime.Lambda arg$1) {
  final frege.runtime.Lambda a_18969 = Chinook.IRequestable_IO.body(arg$1);
  return new frege.runtime.Fun1<frege.runtime.Lazy>() {
        final public frege.runtime.Lazy eval(final java.lang.Object arg$2) {
          final PreludeBase.TMaybe v_18950 = 
            a_18969.apply(arg$2).result().<PreludeBase.TMaybe>forced()
          ;
          final PreludeBase.TMaybe $30038 = Handlers.processJSON(v_18950);
          final PreludeBase.TMaybe.DJust $30037 = $30038._Just();
          if ($30037 != null) {
            final Data.TLang $30040 = frege.runtime.Delayed.<Data.TLang>forced($30037.mem1);
            final frege.runtime.Lambda b_18949 = 
              PreludeBase.TST._return(
                    new frege.runtime.Delayed() {
                      final public java.lang.Object eval() {
                        return Chinook.TResponse.upd$output(
                                  Chinook.TResponse.upd$status(Chinook.response, 201),
                                  PreludeBase.TMaybe.DJust.mk("created")
                                );
                      }
                    }
                  )
            ;
            return b_18949.apply(arg$2).result();
          }
          final PreludeBase.TMaybe.DNothing $30034 = $30038._Nothing();
          assert $30034 != null;
          final frege.runtime.Lambda b_18956 = 
            PreludeBase.TST._return(
                  new frege.runtime.Delayed() {
                    final public java.lang.Object eval() {
                      return Chinook.TResponse.upd$output(
                                Chinook.TResponse.upd$status(Chinook.response, 400),
                                PreludeBase.TMaybe.DJust.mk("failed")
                              );
                    }
                  }
                )
          ;
          return b_18956.apply(arg$2).result();
        }
      };
}
final public static frege.runtime.Lambda helloWorldHandler(final frege.runtime.Lazy arg$1) {
  return PreludeBase.TST._return(
            Ĳ.upd$outputƒ634905f1.inst.apply(
                  Chinook.response, PreludeBase.TMaybe.DJust.mk("Hello World from Chinook :-)")
                )
          );
}
final public static frege.runtime.Lambda goodbyeHandler(final frege.runtime.Lazy arg$1) {
  return PreludeBase.TST._return(
            Ĳ.upd$outputƒ634905f1.inst.apply(
                  Chinook.response, PreludeBase.TMaybe.DJust.mk("Bye bye")
                )
          );
}
final public static PreludeBase.TMaybe getLangAsJSON(
  final PreludeBase.TMaybe arg$1, final frege.runtime.Lazy arg$2
) {
  final PreludeBase.TMaybe.DJust $30036 = arg$1._Just();
  if ($30036 != null) {
    final PreludeBase.TMaybe $30035 = arg$2.<PreludeBase.TMaybe>forced();
    final PreludeBase.TMaybe.DJust $30046 = $30035._Just();
    if ($30046 != null) {
      return Maybe.IMonad_Maybe._return(
                new frege.runtime.Delayed() {
                  final public java.lang.Object eval() {
                    return JSON.IShow_Value.show(
                              Data.Ĳ.toJSONƒ5ff2b992.inst.apply(
                                    Data.TLang.mk($30036.mem1, $30046.mem1)
                                  )
                            );
                  }
                }
              );
    }
    final PreludeBase.TMaybe.DNothing $30045 = $30035._Nothing();
    assert $30045 != null;
    return PreludeBase.TMaybe.DNothing.it;
  }
  final PreludeBase.TMaybe.DNothing $30048 = arg$1._Nothing();
  assert $30048 != null;
  return PreludeBase.TMaybe.DNothing.it;
}
final public static frege.runtime.Lambda getJSONHandler(final frege.runtime.Lazy arg$1) {
  final frege.runtime.Lambda a_19152 = Chinook.IRequestable_IO.param(arg$1, "code");
  return new frege.runtime.Fun1<frege.runtime.Lazy>() {
        final public frege.runtime.Lazy eval(final java.lang.Object arg$2) {
          final PreludeBase.TMaybe v_19145 = 
            a_19152.apply(arg$2).result().<PreludeBase.TMaybe>forced()
          ;
          final frege.runtime.Lambda a_19174 = Chinook.IRequestable_IO.param(arg$1, "desc");
          final PreludeBase.TMaybe v_19175 = 
            a_19174.apply(arg$2).result().<PreludeBase.TMaybe>forced()
          ;
          final frege.runtime.Lambda b_19170 = 
            PreludeBase.TST._return(
                  new frege.runtime.Delayed() {
                    final public java.lang.Object eval() {
                      return Chinook.TResponse.upd$headers(
                                Chinook.TResponse.upd$output(
                                      Chinook.TResponse.upd$status(Chinook.response, 200),
                                      Ĳ.getLangAsJSONƒa6132aa8.inst.apply(v_19145, v_19175)
                                    ),
                                PreludeBase.TList.DCons.mk(
                                      PreludeBase.TTuple2.mk(
                                            "Content-Type",
                                            PreludeBase.TMaybe.DJust.mk("application/json")
                                          ),
                                      PreludeBase.TList.DList.it
                                    )
                              );
                    }
                  }
                )
          ;
          return b_19170.apply(arg$2).result();
        }
      };
}
final public static PreludeBase.TMaybe createGreetings(
  final frege.runtime.Lazy arg$1, final frege.runtime.Lazy arg$2
) {
  return Maybe.IFunctor_Maybe.fmap(
            Ĳ.concatƒ9413ac1.inst(
                  PreludeList.IListView_StringJ.it, PreludeList.IListMonoid_StringJ.it
                ),
            (PreludeBase.TMaybe)PreludeMonad.sequence(
                  Maybe.IMonad_Maybe.it,
                  PreludeBase.TList.DCons.mk(
                        PreludeBase.TMaybe.DJust.mk("Hello "),
                        PreludeBase.TList.DCons.mk(
                              arg$1,
                              PreludeBase.TList.DCons.mk(
                                    PreludeBase.TMaybe.DJust.mk(". Are you "),
                                    PreludeBase.TList.DCons.mk(
                                          arg$2,
                                          PreludeBase.TList.DCons.mk(
                                                PreludeBase.TMaybe.DJust.mk("?"),
                                                PreludeBase.TList.DList.it
                                              )
                                        )
                                  )
                            )
                      )
                )
          );
}
final public static frege.runtime.Lambda greetingsHandler(final frege.runtime.Lambda arg$1) {
  final frege.runtime.Lambda a_19005 = Chinook.IRequestable_IO.path(arg$1, ":name");
  return new frege.runtime.Fun1<frege.runtime.Lazy>() {
        final public frege.runtime.Lazy eval(final java.lang.Object arg$2) {
          final PreludeBase.TMaybe v_19002 = 
            a_19005.apply(arg$2).result().<PreludeBase.TMaybe>forced()
          ;
          final frege.runtime.Lambda a_18987 = Chinook.IRequestable_IO.path(arg$1, ":age");
          final PreludeBase.TMaybe v_19160 = 
            a_18987.apply(arg$2).result().<PreludeBase.TMaybe>forced()
          ;
          final frege.runtime.Lambda b_19159 = 
            PreludeBase.TST._return(
                  new frege.runtime.Delayed() {
                    final public java.lang.Object eval() {
                      return Chinook.TResponse.upd$output(
                                Chinook.TResponse.upd$status(Chinook.response, 200),
                                Ĳ.createGreetingsƒ3e6078c8.inst.apply(v_19002, v_19160)
                              );
                    }
                  }
                )
          ;
          return b_19159.apply(arg$2).result();
        }
      };
}
@frege.runtime.Meta.FunctionPointers(
  qnames={
    @frege.runtime.Meta.QName(pack="chinook.Handlers", base="createGreetings"),
    @frege.runtime.Meta.QName(pack="chinook.Handlers", base="getLangAsJSON"),
    @frege.runtime.Meta.QName(
      kind=2, pack="chinook.Chinook", base="Response", member="upd$output"
    ),
    @frege.runtime.Meta.QName(pack="frege.prelude.PreludeList", base="concat")
  },
  jnames={
    "createGreetingsƒ3e6078c8", "getLangAsJSONƒa6132aa8", "upd$outputƒ634905f1",
    "concatƒ9413ac1"
  }
)
public static class Ĳ  {
  public Ĳ() {}
  final public static class createGreetingsƒ3e6078c8 
    extends frege.runtime.Fun2<PreludeBase.TMaybe> 
   {
    public createGreetingsƒ3e6078c8() {}
    final public PreludeBase.TMaybe eval(
      final java.lang.Object arg$2, final java.lang.Object arg$1
    ) {
      return Handlers.createGreetings(
                frege.runtime.Delayed.delayed(arg$1), frege.runtime.Delayed.delayed(arg$2)
              );
    }
    final public static createGreetingsƒ3e6078c8 inst = new createGreetingsƒ3e6078c8();
  }
  final public static class getLangAsJSONƒa6132aa8 
    extends frege.runtime.Fun2<PreludeBase.TMaybe> 
   {
    public getLangAsJSONƒa6132aa8() {}
    final public PreludeBase.TMaybe eval(
      final java.lang.Object arg$2, final java.lang.Object arg$1
    ) {
      return Handlers.getLangAsJSON(
                frege.runtime.Delayed.<PreludeBase.TMaybe>forced(arg$1),
                frege.runtime.Delayed.delayed(arg$2)
              );
    }
    final public static getLangAsJSONƒa6132aa8 inst = new getLangAsJSONƒa6132aa8();
  }
  final public static class upd$outputƒ634905f1 extends frege.runtime.Fun2<Chinook.TResponse>  {
    public upd$outputƒ634905f1() {}
    final public Chinook.TResponse eval(
      final java.lang.Object arg$2, final java.lang.Object arg$1
    ) {
      return Chinook.TResponse.upd$output(
                frege.runtime.Delayed.<Chinook.TResponse>forced(arg$1),
                frege.runtime.Delayed.delayed(arg$2)
              );
    }
    final public static upd$outputƒ634905f1 inst = new upd$outputƒ634905f1();
  }
  final public static class concatƒ9413ac1 extends frege.runtime.Fun1<java.lang.Object>  {
    final PreludeList.CListEmpty ctx$1 ;
    final PreludeList.CListSemigroup ctx$2 ;
    public concatƒ9413ac1(
      final PreludeList.CListEmpty arg$1, final PreludeList.CListSemigroup arg$2
    ) {
      ctx$1 = arg$1;
      ctx$2 = arg$2;
    }
    final public java.lang.Object eval(final java.lang.Object arg$1) {
      return PreludeList.concat(
                ctx$1, ctx$2, frege.runtime.Delayed.<PreludeBase.TList>forced(arg$1)
              );
    }
    final public static concatƒ9413ac1 inst(
      final PreludeList.CListEmpty arg$1, final PreludeList.CListSemigroup arg$2
    ) {
      return new concatƒ9413ac1(arg$1, arg$2);
    }
  }
}
}
